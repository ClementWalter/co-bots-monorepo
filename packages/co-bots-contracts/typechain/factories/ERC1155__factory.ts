/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC1155, ERC1155Interface } from "../ERC1155";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "uri_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001aea38038062001aea833981016040819052620000349162000242565b6200003f8162000046565b50620002c9565b80516200005b9060029060208401906200005f565b5050565b8280546200006d9062000298565b90600052602060002090601f016020900481019282620000915760008555620000dc565b82601f10620000ac57805160ff1916838001178555620000dc565b82800160010185558215620000dc579182015b82811115620000dc578251825591602001919060010190620000bf565b50620000ea929150620000ee565b5090565b5b80821115620000ea5760008155600101620000ef565b634e487b7160e01b600052604160045260246000fd5b601f19601f83011681016001600160401b038111828210171562000143576200014362000105565b6040525050565b60006200015660405190565b90506200016482826200011b565b919050565b60006001600160401b0382111562000185576200018562000105565b601f19601f83011660200192915050565b60005b83811015620001b357818101518382015260200162000199565b83811115620001c3576000848401525b50505050565b6000620001e0620001da8462000169565b6200014a565b905082815260208101848484011115620001fd57620001fd600080fd5b6200020a84828562000196565b509392505050565b600082601f830112620002285762000228600080fd5b81516200023a848260208601620001c9565b949350505050565b600060208284031215620002595762000259600080fd5b81516001600160401b03811115620002745762000274600080fd5b6200023a8482850162000212565b634e487b7160e01b600052602260045260246000fd5b600281046001821680620002ad57607f821691505b60208210811415620002c357620002c362000282565b50919050565b61181180620002d96000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461017957600080fd5b8062fdd58e1461008c57806301ffc9a7146100b55780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610b7f565b61018c565b6040516100ac9190610bc4565b60405180910390f35b6100c86100c3366004610c05565b6101e6565b6040516100ac9190610c36565b6100e86100e3366004610c44565b6102c9565b6040516100ac9190610cc7565b610108610103366004610e73565b61035d565b005b61011d610118366004610faf565b6103a9565b6040516100ac919061106f565b610108610138366004611093565b610491565b6100c861014b3660046110c6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101086101873660046110f9565b6104a0565b60006001600160a01b0383166101bd5760405162461bcd60e51b81526004016101b4906111ad565b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fd9b67a2600000000000000000000000000000000000000000000000000000000148061027957507fffffffff0000000000000000000000000000000000000000000000000000000082167f0e89341c00000000000000000000000000000000000000000000000000000000145b806101e057507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316146101e0565b6060600280546102d8906111d3565b80601f0160208091040260200160405190810160405280929190818152602001828054610304906111d3565b80156103515780601f1061032657610100808354040283529160200191610351565b820191906000526020600020905b81548152906001019060200180831161033457829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103795750610379853361014b565b6103955760405162461bcd60e51b81526004016101b490611258565b6103a285858585856104e5565b5050505050565b606081518351146103cc5760405162461bcd60e51b81526004016101b4906112c0565b6000835167ffffffffffffffff8111156103e8576103e8610cdf565b604051908082528060200260200182016040528015610411578160200160208202803683370190505b50905060005b84518110156104895761045c858281518110610435576104356112d0565b602002602001015185838151811061044f5761044f6112d0565b602002602001015161018c565b82828151811061046e5761046e6112d0565b6020908102919091010152610482816112fc565b9050610417565b509392505050565b61049c338383610681565b5050565b6001600160a01b0385163314806104bc57506104bc853361014b565b6104d85760405162461bcd60e51b81526004016101b49061138d565b6103a28585858585610742565b81518351146105065760405162461bcd60e51b81526004016101b4906113f5565b6001600160a01b03841661052c5760405162461bcd60e51b81526004016101b49061145d565b3360005b845181101561061357600085828151811061054d5761054d6112d0565b60200260200101519050600085838151811061056b5761056b6112d0565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156105bb5760405162461bcd60e51b81526004016101b4906114c5565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906105f89084906114d5565b925050819055505050508061060c906112fc565b9050610530565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516106639291906114ed565b60405180910390a4610679818787878787610874565b505050505050565b816001600160a01b0316836001600160a01b031614156106b35760405162461bcd60e51b81526004016101b49061156a565b6001600160a01b038381166000818152600160209081526040808320948716808452949091529081902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016851515179055517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190610735908590610c36565b60405180910390a3505050565b6001600160a01b0384166107685760405162461bcd60e51b81526004016101b49061145d565b33610781818787610778886109dc565b6103a2886109dc565b6000848152602081815260408083206001600160a01b038a168452909152902054838110156107c25760405162461bcd60e51b81526004016101b4906114c5565b6000858152602081815260408083206001600160a01b038b81168552925280832087850390559088168252812080548692906107ff9084906114d5565b92505081905550856001600160a01b0316876001600160a01b0316836001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62888860405161085592919061157a565b60405180910390a461086b828888888888610a27565b50505050505050565b6001600160a01b0384163b15610679576040517fbc197c810000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063bc197c81906108d1908990899088908890889060040161159e565b602060405180830381600087803b1580156108eb57600080fd5b505af192505050801561091b575060408051601f3d908101601f1916820190925261091891810190611609565b60015b61097b5761092761162a565b806308c379a01415610961575061093c611646565b806109475750610963565b8060405162461bcd60e51b81526004016101b49190610cc7565b505b60405162461bcd60e51b81526004016101b49061171c565b7fffffffff0000000000000000000000000000000000000000000000000000000081167fbc197c81000000000000000000000000000000000000000000000000000000001461086b5760405162461bcd60e51b81526004016101b490611784565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610a1657610a166112d0565b602090810291909101015292915050565b6001600160a01b0384163b15610679576040517ff23a6e610000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063f23a6e6190610a849089908990889088908890600401611794565b602060405180830381600087803b158015610a9e57600080fd5b505af1925050508015610ace575060408051601f3d908101601f19168201909252610acb91810190611609565b60015b610ada5761092761162a565b7fffffffff0000000000000000000000000000000000000000000000000000000081167ff23a6e61000000000000000000000000000000000000000000000000000000001461086b5760405162461bcd60e51b81526004016101b490611784565b60006001600160a01b0382166101e0565b610b5581610b3b565b8114610b6057600080fd5b50565b80356101e081610b4c565b80610b55565b80356101e081610b6e565b60008060408385031215610b9557610b95600080fd5b6000610ba18585610b63565b9250506020610bb285828601610b74565b9150509250929050565b805b82525050565b602081016101e08284610bbc565b7fffffffff000000000000000000000000000000000000000000000000000000008116610b55565b80356101e081610bd2565b600060208284031215610c1a57610c1a600080fd5b6000610c268484610bfa565b949350505050565b801515610bbe565b602081016101e08284610c2e565b600060208284031215610c5957610c59600080fd5b6000610c268484610b74565b60005b83811015610c80578181015183820152602001610c68565b83811115610c8f576000848401525b50505050565b6000610c9f825190565b808452602084019350610cb6818560208601610c65565b601f01601f19169290920192915050565b60208082528101610cd88184610c95565b9392505050565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff82111715610d1b57610d1b610cdf565b6040525050565b6000610d2d60405190565b9050610d398282610cf5565b919050565b600067ffffffffffffffff821115610d5857610d58610cdf565b5060209081020190565b6000610d75610d7084610d3e565b610d22565b83815290506020808201908402830185811115610d9457610d94600080fd5b835b81811015610db657610da88782610b74565b835260209283019201610d96565b5050509392505050565b600082601f830112610dd457610dd4600080fd5b8135610c26848260208601610d62565b600067ffffffffffffffff821115610dfe57610dfe610cdf565b601f19601f83011660200192915050565b82818337506000910152565b6000610e29610d7084610de4565b905082815260208101848484011115610e4457610e44600080fd5b610489848285610e0f565b600082601f830112610e6357610e63600080fd5b8135610c26848260208601610e1b565b600080600080600060a08688031215610e8e57610e8e600080fd5b6000610e9a8888610b63565b9550506020610eab88828901610b63565b945050604086013567ffffffffffffffff811115610ecb57610ecb600080fd5b610ed788828901610dc0565b935050606086013567ffffffffffffffff811115610ef757610ef7600080fd5b610f0388828901610dc0565b925050608086013567ffffffffffffffff811115610f2357610f23600080fd5b610f2f88828901610e4f565b9150509295509295909350565b6000610f4a610d7084610d3e565b83815290506020808201908402830185811115610f6957610f69600080fd5b835b81811015610db657610f7d8782610b63565b835260209283019201610f6b565b600082601f830112610f9f57610f9f600080fd5b8135610c26848260208601610f3c565b60008060408385031215610fc557610fc5600080fd5b823567ffffffffffffffff811115610fdf57610fdf600080fd5b610feb85828601610f8b565b925050602083013567ffffffffffffffff81111561100b5761100b600080fd5b610bb285828601610dc0565b6110218282610bbc565b5060200190565b6000611032825190565b808452602093840193830160005b828110156110655781516110548782611017565b965050602082019150600101611040565b5093949350505050565b60208082528101610cd88184611028565b801515610b55565b80356101e081611080565b600080604083850312156110a9576110a9600080fd5b60006110b58585610b63565b9250506020610bb285828601611088565b600080604083850312156110dc576110dc600080fd5b60006110e88585610b63565b9250506020610bb285828601610b63565b600080600080600060a0868803121561111457611114600080fd5b60006111208888610b63565b955050602061113188828901610b63565b945050604061114288828901610b74565b9350506060610f0388828901610b74565b602b8152602081017f455243313135353a2062616c616e636520717565727920666f7220746865207a81527f65726f2061646472657373000000000000000000000000000000000000000000602082015290505b60400190565b602080825281016101e081611153565b634e487b7160e01b600052602260045260246000fd5b6002810460018216806111e757607f821691505b602082108114156111fa576111fa6111bd565b50919050565b60328152602081017f455243313135353a207472616e736665722063616c6c6572206973206e6f742081527f6f776e6572206e6f7220617070726f7665640000000000000000000000000000602082015290506111a7565b602080825281016101e081611200565b60298152602081017f455243313135353a206163636f756e747320616e6420696473206c656e67746881527f206d69736d617463680000000000000000000000000000000000000000000000602082015290506111a7565b602080825281016101e081611268565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561132e5761132e6112e6565b5060010190565b60298152602081017f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7281527f20617070726f7665640000000000000000000000000000000000000000000000602082015290506111a7565b602080825281016101e081611335565b60288152602081017f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682081527f6d69736d61746368000000000000000000000000000000000000000000000000602082015290506111a7565b602080825281016101e08161139d565b60258152602081017f455243313135353a207472616e7366657220746f20746865207a65726f20616481527f6472657373000000000000000000000000000000000000000000000000000000602082015290506111a7565b602080825281016101e081611405565b602a8152602081017f455243313135353a20696e73756666696369656e742062616c616e636520666f81527f72207472616e7366657200000000000000000000000000000000000000000000602082015290506111a7565b602080825281016101e08161146d565b600082198211156114e8576114e86112e6565b500190565b604080825281016114fe8185611028565b90508181036020830152610c268184611028565b60298152602081017f455243313135353a2073657474696e6720617070726f76616c2073746174757381527f20666f722073656c660000000000000000000000000000000000000000000000602082015290506111a7565b602080825281016101e081611512565b604081016115888285610bbc565b610cd86020830184610bbc565b610bbe81610b3b565b60a081016115ac8288611595565b6115b96020830187611595565b81810360408301526115cb8186611028565b905081810360608301526115df8185611028565b905081810360808301526115f38184610c95565b979650505050505050565b80516101e081610bd2565b60006020828403121561161e5761161e600080fd5b6000610c2684846115fe565b600060033d11156116435760046000803e5060005160e01c5b90565b600060443d10156116545790565b60405160043d036004823e80513d602482011167ffffffffffffffff8211171561167d57505090565b808201805167ffffffffffffffff811115611699575050505090565b80602083010160043d0385018111156116b457505050505090565b5061048981602001840185610cf5565b60348152602081017f455243313135353a207472616e7366657220746f206e6f6e204552433131353581527f526563656976657220696d706c656d656e746572000000000000000000000000602082015290506111a7565b602080825281016101e0816116c4565b60288152602081017f455243313135353a204552433131353552656365697665722072656a6563746581527f6420746f6b656e73000000000000000000000000000000000000000000000000602082015290506111a7565b602080825281016101e08161172c565b60a081016117a28288611595565b6117af6020830187611595565b6117bc6040830186610bbc565b6117c96060830185610bbc565b81810360808301526115f38184610c9556fea2646970667358221220ba65448c4b69d540f3c4389c670932d547336c71583a8a8db614bd43af52433d64736f6c63430008080033";

export class ERC1155__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    uri_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1155> {
    return super.deploy(uri_, overrides || {}) as Promise<ERC1155>;
  }
  getDeployTransaction(
    uri_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(uri_, overrides || {});
  }
  attach(address: string): ERC1155 {
    return super.attach(address) as ERC1155;
  }
  connect(signer: Signer): ERC1155__factory {
    return super.connect(signer) as ERC1155__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155Interface {
    return new utils.Interface(_abi) as ERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155 {
    return new Contract(address, _abi, signerOrProvider) as ERC1155;
  }
}
